{"version":3,"file":"parse-touch-data.js","sources":["../../src/utils/parse-touch-data.js"],"sourcesContent":["/**\n * Generate initial touch data for passed Touch\n *\n * @function parseInitialTouchData\n * @param {Touch} touch A Touch instance\n * @param {TouchEvent} e The touch{start,move,end} event\n * @return {Object} Returns a TouchData object\n * @private\n */\nexport function parseInitialTouchData(e) {\n  return {\n    data: {\n      initial: {\n        x: e.clientX,\n        y: e.clientY,\n        timeStamp: e.timeStamp,\n      },\n      cache: {\n        velocity: {\n          distanceX: 0,\n          distanceY: 0,\n          timeStamp: e.timeStamp,\n        },\n      },\n      timeStamp: e.timeStamp,\n      originalEvent: e,\n    },\n    panStarted: false,\n    panDenied: false,\n  };\n}\n\n/**\n * Generates useful touch data from current event based on previously generated data\n *\n * @function parseTouchData\n * @param {Object} previousTouchData Previous data returned by this or the parseInitialTouchData function\n * @param {Touch} touch A Touch instance\n * @param {TouchEvent} e The touch{start,move,end} event\n * @return {Object} The new touch data\n * @private\n */\nexport function parseTouchData(previousTouchData, e) {\n  const touchData = JSON.parse(JSON.stringify(previousTouchData));\n  const data = touchData.data;\n\n  if (data.current) {\n    data.current.deltaX = e.clientX - data.current.x;\n    data.current.deltaY = e.clientY - data.current.y;\n  } else {\n    data.current = {};\n    data.current.deltaX = e.clientX - data.initial.x;\n    data.current.deltaY = e.clientY - data.initial.y;\n  }\n\n  data.current.x = e.clientX;\n  data.current.y = e.clientY;\n  data.current.distance = getPointDistance(\n    data.initial.x,\n    e.clientX,\n    data.initial.y,\n    e.clientY,\n  );\n  data.current.distanceX = e.clientX - data.initial.x;\n  data.current.distanceY = e.clientY - data.initial.y;\n  data.current.angle = getAngle(\n    data.initial.x,\n    data.initial.y,\n    e.clientX,\n    e.clientY,\n  );\n\n  // overallVelocity can be calculated continuously\n  const overallDeltaTime = e.timeStamp - data.initial.timeStamp;\n  data.current.overallVelocityX =\n    data.current.distanceX / overallDeltaTime || 0;\n  data.current.overallVelocityY =\n    data.current.distanceY / overallDeltaTime || 0;\n  data.current.overallVelocity =\n    Math.abs(data.current.overallVelocityX) >\n    Math.abs(data.current.overallVelocityY)\n      ? data.current.overallVelocityX\n      : data.current.overallVelocityY;\n\n  // we don't update the velocity on the final pointerup event as nothing but the timestamp has changed\n  // which always results in a velocity of 0\n  if (e.type !== 'pointerup') {\n    const deltaTime = e.timeStamp - data.cache.velocity.timeStamp;\n\n    data.current.velocityX =\n      (data.current.distanceX - data.cache.velocity.distanceX) / deltaTime || 0;\n    data.current.velocityY =\n      (data.current.distanceY - data.cache.velocity.distanceY) / deltaTime || 0;\n    data.current.velocity =\n      Math.abs(data.current.velocityX) > Math.abs(data.current.velocityY)\n        ? data.current.velocityX\n        : data.current.velocityY;\n\n    data.cache.velocity = {\n      distanceX: data.current.distanceX,\n      distanceY: data.current.distanceY,\n      timeStamp: e.timeStamp,\n    };\n  }\n\n  data.originalEvent = e;\n  data.timeStamp = e.timeStamp;\n\n  touchData.data = data;\n\n  return touchData;\n}\n\n/**\n * Calculates whether or not the movement went left or right\n *\n * @function isHorizontal\n * @param {TouchData} touchData A POJO as returned from `parseInitialTouchData` or `parseTouchData`\n * @return {boolean} True if horizontal\n * @private\n */\nexport function isHorizontal(touchData) {\n  const direction = getDirection(\n    touchData.data.current.distanceX,\n    touchData.data.current.distanceY,\n  );\n  return direction === 'left' || direction === 'right';\n}\n\n/**\n * Calculates whether or not the movement went up or down\n *\n * @function isVertical\n * @param {TouchData} touchData A POJO as returned from `parseInitialTouchData` or `parseTouchData`\n * @return {boolean} true if vertical\n * @private\n */\nexport function isVertical(touchData) {\n  const direction = getDirection(\n    touchData.data.current.distanceX,\n    touchData.data.current.distanceY,\n  );\n  return direction === 'down' || direction === 'up';\n}\n\n/**\n * Calculates the direction of the touch movement\n *\n * @function getDirection\n * @param {Number} x The distance moved from the origin on the X axis\n * @param {Number} y The the distance moved from the origin on the Y axis\n * @return {string} The direction of the pan event. One of 'left', 'right', 'up', 'down'.\n * @private\n */\nfunction getDirection(x, y) {\n  if (x === y) {\n    return 'none';\n  } else if (Math.abs(x) >= Math.abs(y)) {\n    return x < 0 ? 'left' : 'right';\n  } else {\n    return y < 0 ? 'down' : 'up';\n  }\n}\n\n/**\n * Calculates the distance between two points\n *\n * @function getPointDistance\n * @param {number} x0 X coordinate of the origin\n * @param {number} x1 X coordinate of the current position\n * @param {number} y0 Y coordinate of the origin\n * @param {number} y1 Y coordinate of the current position\n * @return {number} Distance between the two points\n * @private\n */\nfunction getPointDistance(x0, x1, y0, y1) {\n  return Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));\n}\n\n/**\n * Calculates the angle between two points.\n *\n * @function getAngle\n * @param {number} originX\n * @param {number} originY\n * @param {number} projectionX\n * @param {number} projectionY\n * @return {number} Angle between the two points\n * @private\n */\nfunction getAngle(originX, originY, projectionX, projectionY) {\n  const angle =\n    Math.atan2(projectionY - originY, projectionX - originX) * (180 / Math.PI);\n  return 360 - (angle < 0 ? 360 + angle : angle);\n}\n"],"names":["parseInitialTouchData","e","data","initial","x","clientX","y","clientY","timeStamp","cache","velocity","distanceX","distanceY","originalEvent","panStarted","panDenied","parseTouchData","previousTouchData","touchData","JSON","parse","stringify","current","deltaX","deltaY","distance","getPointDistance","angle","getAngle","overallDeltaTime","overallVelocityX","overallVelocityY","overallVelocity","Math","abs","type","deltaTime","velocityX","velocityY","isHorizontal","direction","getDirection","isVertical","x0","x1","y0","y1","sqrt","originX","originY","projectionX","projectionY","atan2","PI"],"mappings":"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"}